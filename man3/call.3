.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "CALL \- Long Call to a Subroutine \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS CALL \- Long Call to a Subroutine
.SS  () Description:
.PP
Calls to a subroutine within the entire program memory.
The return address (to the instruction after the CALL) will be stored
onto the stack.
(See also RCALL (avrassembler.wb_RCALL.html) ).
The stack pointer uses a post\-decrement scheme during CALL.
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
PC ←k Devices with 16 bits PC, 128K bytes program memory maximum.
.PP
PC ←k Devices with 22 bits PC, 8M bytes program memory maximum.
.PP
Syntax: Operands: Program Counter Stack:
.PP
CALL k 0 ≤ k < 64K PC ← k STACK ← PC+2
.PP
SP ← SP\-2, (2 bytes, 16 bits)
.PP
CALL k 0 ≤ k < 4M PC ← k STACK ← PC+2
.PP
SP ← SP\-3 (3 bytes, 22 bits)
.PP
32\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
010k
T}@T{
.PP
kkkk
T}@T{
.PP
111k
T}
_
T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
mov\ r16,r0\ ;\ Copy\ r0\ to\ r16
call\ check\ ;\ Call\ subroutine
nop\ ;\ Continue\ (do\ nothing)
\&...
check:\ cpi\ r16,\ $42\ ;\ Check\ if\ r16\ has\ a\ special\ value
breq\ error\ ;\ Branch\ if\ equal
ret\ ;\ Return\ from\ subroutine
\&...
error:\ rjmp\ error\ ;\ Infinite\ loop
\f[]
.fi
.PP
.PP
Words:2 (4 bytes)
.PP
Cycles:
.PP
.TS
tab(@);
l l l.
T{
T}@T{
.PP
Cycles
T}@T{
.PP
Cycles xmega
T}
_
T{
.PP
Devices with 16\-bit PC
T}@T{
.PP
4
T}@T{
.PP
3
T}
T{
.PP
Devices with 22\-bit PC
T}@T{
.PP
5
T}@T{
.PP
4
T}
.TE
