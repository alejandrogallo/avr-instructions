.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "SBIC \- Skip if Bit in I/O Register is Cleared \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS SBIC \- Skip if Bit in I/O Register is Cleared
.SS  () Description:
.PP
This instruction tests a single bit in an I/O register and skips the
next instruction if the bit is cleared.
This instruction operates on the lower 32 I/O registers \- addresses
0\-31.
.PP
Operation:
.PP
(i)If I/O(A,b) = 0 then PC ← PC + 2 (or 3) else PC ← PC + 1
.PP
Syntax: Operands: Program Counter:
.PP
(i)SBIC A,b 0 ≤ A ≤ 31, 0 ≤ b ≤ 7 PC ← PC + 1, Condition false \- no
skip
.PP
PC ← PC + 2, Skip a one word instruction
.PP
PC ← PC + 3, Skip a two word instruction
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
1001
T}@T{
.PP
AAAA
T}@T{
.PP
Abbb
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
\ e2wait:\ sbic\ $1C,1\ ;\ Skip\ next\ inst.\ if\ EEWE\ cleared
rjmp\ e2wait\ ;\ EEPROM\ write\ not\ finished
nop;\ Continue\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words:1 (2 bytes)
.PP
Cycles:
.PP
.TS
tab(@);
l l l l.
T{
T}@T{
.PP
Cycles
T}@T{
.PP
Cycles xmega
T}@T{
.PP
Cycles AVR8L
T}
_
T{
.PP
Condition is false
T}@T{
.PP
1
T}@T{
.PP
2
T}@T{
.PP
1
T}
T{
.PP
Condition is true and instruction skipped is 1 word
T}@T{
.PP
2
T}@T{
.PP
3
T}@T{
.PP
2
T}
T{
.PP
Condition is true and instruction skipped is 2 words
T}@T{
.PP
3
T}@T{
.PP
4
T}@T{
.PP
N/A
T}
.TE
