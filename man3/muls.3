.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "MULS \- Multiply Signed \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS MULS \- Multiply Signed
.SS  () Description:
.PP
This instruction performs 8\-bit × 8\-bit → 16\-bit signed
multiplication.
.PP
.TS
tab(@);
l l l l l l.
T{
.PP
Rd
T}@T{
T}@T{
.PP
Rr
T}@T{
T}@T{
.PP
R1
T}@T{
.PP
R0
T}
_
T{
.PP
Multiplicand
T}@T{
.PP
×
T}@T{
.PP
Multiplier
T}@T{
.PP
→
T}@T{
.PP
Product High
T}@T{
.PP
Product Low
T}
T{
.PP
8
T}@T{
T}@T{
.PP
8
T}@T{
T}@T{
.PP
16
T}@T{
T}
.TE
.PP
The multiplicand Rd and the multiplier Rr are two registers containing
signed numbers.
The 16\-bit signed product is placed in R1 (high byte) and R0 (low
byte).
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
(i)R1:R0 ← Rd × Rr(signed ← signed × signed)
.PP
Syntax: Operands: Program Counter:
.PP
(i)MULS Rd,Rr 16 ≤ d ≤ 31, 16 ≤ r ≤ 31 PC ← PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
0000
T}@T{
.PP
0010
T}@T{
.PP
dddd
T}@T{
.PP
rrrr
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}
.TE
.PP
C: R15
.PP
Set if bit 15 of the result is set; cleared otherwise.
.PP
Z:
$\\overline{R15} \\overline{R14} \\overline{R13} \\overline{R12}$
.PP
$\\overline{R11} \\overline{R10} \\overline{R9} \\overline{R8}$
.PP
$\\overline{R7} \\overline{R6} \\overline{R5} \\overline{R4}$
.PP
$\\overline{R3} \\overline{R2} \\overline{R1} \\overline{R0}$
.PP
.PP
Set if the result is $0000; cleared otherwise.
.PP
R (Result) equals R1,R0 after the operation.
.PP
Example:
.IP
.nf
\f[C]
muls\ r21,r20\ ;\ Multiply\ signed\ r21\ and\ r20
movw\ r20,r0\ ;\ Copy\ result\ back\ in\ r21:r20
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 2
