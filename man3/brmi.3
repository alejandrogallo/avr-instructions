.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "BRMI \- Branch if Minus \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS BRMI \- Branch if Minus
.SS  () Description:
.PP
Conditional relative branch.
Tests the Negative flag (N) and branches relatively to PC if N is set.
This instruction branches relatively to PC in either direction (PC \- 63
≤ destination ≤ PC + 64).
The parameter k is the offset from PC and is represented in two's
complement form.
(Equivalent to instruction BRBS (avrassembler.wb_BRBS.html) 2,k).
.PP
Operation:
.PP
If N = 1 then PC ← PC + k + 1, else PC ← PC + 1
.PP
Syntax: Operands: Program Counter:
.PP
BRMI k \-64 ≤ k ≤ +63 PC ← PC + k + 1
.PP
PC ← PC + 1, if condition is false
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1111
T}@T{
.PP
00kk
T}@T{
.PP
kkkk
T}@T{
.PP
k010
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.PP
subi r18,4 ; Subtract 4 from r18
.PP
brmi negative ; Branch if result negative
.PP
\&...
.PP
negative: nop ; Branch destination (do nothing)
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1 if condition is false
.PP
2 if condition is true
