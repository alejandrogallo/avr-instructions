.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "POP \- Pop Register from Stack \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS POP \- Pop Register from Stack
.SS  () Description:
.PP
This instruction loads register Rd with a byte from the
Stack (avrassembler.wb_registers.html#avrassembler.Stack) .
The stack pointer is pre\-incremented by 1 before the POP.
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
(i)Rd ← STACK
.PP
Syntax: Operands: Program Counter: Stack:
.PP
(i) POP Rd 0 ≤ d ≤ 31 PC ← PC + 1 SP ← SP + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
000d
T}@T{
.PP
dddd
T}@T{
.PP
1111
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
\ callroutine\ ;\ Call\ subroutine
\ ...
\ routine:\ pushr14\ ;\ Save\ r14\ on\ the\ stack
push\ r13\ ;\ Save\ r13\ on\ the\ stack
\&...
pop\ r13\ ;\ Restore\ r13
pop\ r14\ ;\ Restore\ r14
ret\ ;\ Return\ from\ subroutine
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 2
