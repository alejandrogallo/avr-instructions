.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "MOVW \- Copy Register Word \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS MOVW \- Copy Register Word
.SS  () Description:
.PP
This instruction makes a copy of one register pair into another register
pair.
The source register pair Rr+1:Rr is left unchanged, while the
destination register pair Rd+1:Rd is loaded with a copy of Rr + 1:Rr.
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
(i) Rd+1:Rd ← Rr+1:Rr
.PP
Syntax: Operands: Program Counter:
.PP
(i) MOVW Rd+1:Rd,Rr+1Rr d E {0,2,\&...,30}, r E {0,2,\&...,30} PC ← PC +
1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
0000
T}@T{
.PP
0001
T}@T{
.PP
dddd
T}@T{
.PP
rrrr
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
movw\ r17:16,r1:r0\ ;\ Copy\ r1:r0\ to\ r17:r16
call\ check\ ;\ Call\ subroutine
\&...
check:\ cpi\ r16,$11\ ;\ Compare\ r16\ to\ $11
\&...
cpi\ r17,$32\ ;\ Compare\ r17\ to\ $32
\&...
ret\ ;\ Return\ from\ subroutine
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
