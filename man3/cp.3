.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "CP\- Compare \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS CP \- Compare
.SS  () Description:
.PP
This instruction performs a compare between two registers Rd and Rr.
None of the registers are changed.
All conditional branches can be used after this instruction.
.PP
Operation:
.PP
Rd \- Rr
.PP
Syntax: Operands: Program Counter:
.PP
CP Rd,Rr 0 ≤ d ≤ 31, 0 ≤ r ≤ 31 PC ← PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
0001
T}@T{
.PP
01rd
T}@T{
.PP
dddd
T}@T{
.PP
rrrr
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}
.TE
.PP
H:
$\\overline{Rd3} {Rr3} + {Rr3} {R3}+{R3} \\overline{Rd3}$
.PP
Set if there was a borrow from bit 3; cleared otherwise
.PP
S: N ⊕ V, For signed tests.
.PP
V:
${Rd7}{Rd7} \\overline{Rr7} \\overline{R7} + \\overline{Rd7} {Rr7} {R7}$
.PP
Set if two's complement overflow resulted from the operation; cleared
otherwise.
.PP
N:R7 Set if MSB of the result is set; cleared otherwise.
.PP
Z:
$\\overline{R7} \\overline{R6} \\overline{R5} \\overline{R4}$
.PP
$\\overline{R3} \\overline{R2} \\overline{R1} \\overline{R0}$
.PP
Set if the result is $00; cleared otherwise.
.PP
C:
$\\overline{Rd7} {Rr7} + {Rr7} {R7} + {R7} \\overline{Rd7}$
.PP
Set if the absolute value of the contents of Rr is larger than the
absolute value of Rd; cleared otherwise.
.PP
R (Result) after the operation.
.PP
Example:
.IP
.nf
\f[C]
cp\ r4,r19\ ;\ Compare\ r4\ with\ r19
brne\ noteq\ ;\ Branch\ if\ r4\ ⇔\ r19
\&...
noteq:\ nop\ ;\ Branch\ destination\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
