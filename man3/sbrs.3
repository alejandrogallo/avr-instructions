.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "SBRS \- Skip if Bit in Register is Set \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS SBRS \- Skip if Bit in Register is Set
.SS  () Description:
.PP
This instruction tests a single bit in a register and skips the next
instruction if the bit is set.
.PP
Operation:
.PP
(i)If Rr(b) = 1 then PC ← PC + 2 (or 3) else PC ← PC + 1
.PP
Syntax: Operands: Program Counter:
.PP
(i)SBRS Rr,b 0 ≤ r ≤ 31, 0 ≤ b ≤ 7 PC ← PC + 1, Condition false \- no
skip
.PP
PC ← PC + 2, Skip a one word instruction
.PP
PC ← PC + 3, Skip a two word instruction
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1111
T}@T{
.PP
111r
T}@T{
.PP
rrrr
T}@T{
.PP
0bbb
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
sub\ r0,r1\ ;\ Subtract\ r1\ from\ r0
sbrs\ r0,7\ ;\ Skip\ if\ bit\ 7\ in\ r0\ set
neg\ r0\ ;\ Only\ executed\ if\ bit\ 7\ in\ r0\ not\ set
nop\ ;\ Continue\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1 if condition is false (no skip)
.PP
2 if condition is true (skip is executed) and the instruction skipped is
1 word
.PP
3 if condition is true (skip is executed) and the instruction skipped is
2 words
