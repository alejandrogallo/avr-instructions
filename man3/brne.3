.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "BRNE \- Branch if Not Equal \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS BRNE \- Branch if Not Equal
.SS  () Description:
.PP
Conditional relative branch.
Tests the Zero flag (Z) and branches relatively to PC if Z is cleared.
If the instruction is executed immediately after any of the instructions
CP (avrassembler.wb_CP.html) , CPI (avrassembler.wb_CPI.html) ,
SUB (avrassembler.wb_SUB.html) or SUBI (avrassembler.wb_SUBI.html) , the
branch will occur if and only if the unsigned or signed binary number
represented in Rd was not equal to the unsigned or signed binary number
represented in Rr.
This instruction branches relatively to PC in either direction (PC \- 63
≤ destination ≤ PC + 64).
The parameter k is the offset from PC and is represented in two's
complement form.
(Equivalent to instruction BRBC (avrassembler.wb_BRBC.html) 1,k).
.PP
Operation:
.PP
If Rd ≠ Rr (Z = 0) then PC ← PC + k + 1, else PC ← PC + 1
.PP
Syntax: Operands: Program Counter:
.PP
BRNE k \-64 ≤ k ≤ +63 PC ← PC + k + 1
.PP
PC ← PC + 1, if condition is false
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1111
T}@T{
.PP
01kk
T}@T{
.PP
kkkk
T}@T{
.PP
k001
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
eor\ r27,r27\ ;\ Clear\ r27
loop:inc\ r27\ ;\ Increase\ r27
\&...
cpir27,5\ ;\ Compare\ r27\ to\ 5
brneloop\ ;\ Branch\ if\ r27⇔5
nop\ ;\ Loop\ exit\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1 if condition is false
.PP
2 if condition is true
