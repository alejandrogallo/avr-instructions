.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "EOR \- Exclusive OR \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS EOR \- Exclusive OR
.SS  () Description:
.PP
Performs the logical EOR between the contents of register Rd and
register Rr and places the result in the destination register Rd.
.PP
Operation:
.PP
Rd ← Rd ⊕ Rr
.PP
Syntax: Operands: Program Counter:
.PP
EOR Rd,Rr 0 ≤ d ≤ 31, 0 ≤ r ≤ 31 PC ← PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
0010
T}@T{
.PP
01rd
T}@T{
.PP
dddd
T}@T{
.PP
rrrr
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
⇔
T}@T{
.PP
0
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
\-
T}
.TE
.PP
S: N ⊕ V, For signed tests.
.PP
V:0
.PP
Cleared
.PP
N:R7
.PP
Set if MSB of the result is set; cleared otherwise.
.PP
Z:
$\\overline{R7} \\overline{R6} \\overline{R5} \\overline{R4}$
.PP
$\\overline{R3} \\overline{R2} \\overline{R1} \\overline{R0}$
.PP
.PP
Set if the result is $00; cleared otherwise.
.PP
R (Result) equals Rd after the operation.
.PP
Example:
.IP
.nf
\f[C]
eor\ r4,r4\ ;\ Clear\ r4
eor\ r0,r22\ ;\ Bitwise\ exclusive\ or\ between\ r0\ and\ r22
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
