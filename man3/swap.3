.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "SWAP \- Swap Nibbles \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS SWAP \- Swap Nibbles
.SS  () Description:
.PP
Swaps high and low nibbles in a register.
.PP
Operation:
.PP
(i)R(7:4) ← Rd(3:0), R(3:0) ← Rd(7:4)
.PP
Syntax: Operands: Program Counter:
.PP
(i)SWAP Rd 0 ≤ d ≤ 31 PC ← PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
010d
T}@T{
.PP
dddd
T}@T{
.PP
0010
T}
.TE
.SS  () Status Register and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
R (Result) equals Rd after the operation.
.PP
Example:
.IP
.nf
\f[C]
inc\ r1\ ;\ Increment\ r1
swap\ r1\ ;\ Swap\ high\ and\ low\ nibble\ of\ r1
inc\ r1\ ;\ Increment\ high\ nibble\ of\ r1
swap\ r1\ ;\ Swap\ back
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
