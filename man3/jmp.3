.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "JMP \- Jump \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS JMP \- Jump
.SS Description:
.PP
Jump to an address within the entire 4M (words) program memory.
See also RJMP (avrassembler.wb_RJMP.html) .
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
(i)PC ← k
.PP
Syntax: Operands: Program Counter: Stack:
.PP
(i)JMP k 0 ≤ k < 4M PC ← k Unchanged
.PP
32\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
010k
T}@T{
.PP
kkkk
T}@T{
.PP
110k
T}
_
T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}
.TE
.SS Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
mov\ r1,r0\ ;\ Copy\ r0\ to\ r1
jmp\ farplc\ ;\ Unconditional\ jump
\&...
farplc:nop\ ;\ Jump\ destination\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 2 (4 bytes)
.PP
Cycles: 3
