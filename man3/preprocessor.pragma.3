.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "#pragma, general purpose \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler AVR Assembler Preprocessor
.SS #pragma, general purpose
.SS  () Syntax
.IP "1." 3
\f[C]\ \ \ \ \ \ \ \ \ \ #pragma\ warning\ range\ byte\ option\ \ \ \ \ \ \ \ \ \f[]
.IP "2." 3
\f[C]\ \ \ \ \ \ \ \ \ \ #pragma\ overlap\ option\ \ \ \ \ \ \ \ \ \f[]
.IP "3." 3
\f[C]\ \ \ \ \ \ \ \ \ \ #pragma\ error\ instruction\ \ \ \ \ \ \ \ \ \f[]
.IP "4." 3
\f[C]\ \ \ \ \ \ \ \ \ \ #pragma\ warning\ instruction\ \ \ \ \ \ \ \ \ \f[]
.SS  () Description
.IP "1." 3
The assembler evaluates constant integer expressions as 64\-bit signed
integers internally.
When such expressions are used as immediate operands, they must be
truncated to the number of bits required by the instructions.
For most operands, an out\-of \-range value will cause an \[lq]operand
out of range\[rq] error message.
However, the immediate byte operands for the
LDI (avrassembler.wb_LDI.html) , CPI (avrassembler.wb_CPI.html) ,
ORI (avrassembler.wb_ORI.html) , ANDI (avrassembler.wb_ANDI.html) ,
SUBI (avrassembler.wb_SUBI.html) , SBCI (avrassembler.wb_SBCI.html)
instructions have several possible interpretations that are affected by
this option.
option= integer The immediate operand is evaluated as an integer, and if
its value is outside the range [\-128 \&... 255] a warning is given.
The assembler doesn't know if the users intends an integer operand to be
signed or unsigned, hence it allows any signed or unsigned value that
fits into a byte.
option= overflow (default): The immediate operand is basically evaluated
as an unsigned byte, and any sign extension bits are ignored.
This option is particularly suitable when dealing with bit masks, when
the integer interpretation would cause lots of warnings, like
\f[C]\ \ \ \ \ \ \ \ \ \ ldi\ r16,\ ~((1\ <<\ 7)\ |\ (1\ <<\ 3))\ \ \ \ \ \ \ \ \ \f[]
\f[B]option=none\f[] Disables all out\-of\-range warnings for byte
operands.
Not recommended.
.IP "2." 3
If different sections of code are mapped to overlapping memory locations
using the
ORG (avrassembler.wb_directives.html#avrassembler.wb_directives.ORG)
directive, an error message is normally issued.
This options modifies that behaviour as follows: option= ignoreIgnores
overlap conditions altogether; no errors, no warnings.
Not recommended.
option= warningProduce warnings when overlaps are detected.
 \f[B]option=error\f[] Consider overlaps as error condition; this is the
default and recommended setting.
 \f[B]option=default\f[] Revert to default handling \-erroror whatever
is specified with the
\-O (avrassembler.wb_Command_Line_Options.html#avrassembler.wb_Command_Line_Options.O)
.
The assembler maintains two settings for overlap handling:
Thedefaultsetting that is set up by the \-O command\-line option, and
theeffectivesetting, that only can be modified with this #pragma.
The two settings are equal upon assembler invocation, this #pragma
changes the effective setting from the line it is invoked and until the
line it is changed by another invocation of this pragma.
Hence, this pragma covers source line ranges and not address ranges.
See also:
OVERLAP/NOOVERLAP (avrassembler.wb_directives.html#avrassembler.wb_directives.OVERLAP)
.
.IP "3." 3
Causes use of instructions that are unsupported on the specified device
to cause an assembler error (default behaviour)
.IP "4." 3
Causes use of instructions that are unsupported on the specified device
to cause an assembler warning.
.SS  () See also
.IP "1." 3
\-W\-b/\-W+bi/o (avrassembler.wb_Command_Line_Options.html#avrassembler.wb_Command_Line_Options.W)
.
.IP "2." 3
\-O (avrassembler.wb_Command_Line_Options.html#avrassembler.wb_Command_Line_Options.O)
.
