.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "BST \- Bit Store from Bit in Register to T Flag in SREG \- \- AVR
Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS BST \- Bit Store from Bit in Register to T Flag in SREG
.SS  () Description:
.PP
Stores bit b from Rd to the T flag in SREG (status register).
.PP
Operation:
.PP
T <\- Rd(b)
.PP
Syntax: Operands: Program Counter:
.PP
BST Rd,b 0 ≤ d ≤ 31, 0 ≤ b ≤ 7 PC <\- PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1111
T}@T{
.PP
101d
T}@T{
.PP
dddd
T}@T{
.PP
0bbb
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
⇔
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
T:0 if bit b in Rd is cleared.
Set to 1 otherwise.
.PP
Example:
.IP
.nf
\f[C]
;\ Copy\ bit
bst\ r1,2\ ;\ Store\ bit\ 2\ of\ r1\ in\ T\ flag
bld\ r0,4\ ;\ Load\ T\ into\ bit\ 4\ of\ r0
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
