.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "IJMP \- Indirect Jump \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS IJMP \- Indirect Jump
.SS  () Description:
.PP
Indirect jump to the address pointed to by the Z (16 bits) pointer
register in the register file.
The Z pointer register is 16 bits wide and allows jump within the lowest
64K words (128K bytes) section of program memory.
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
.PP
Operation:
.PP
(i) PC ← Z(15:0) Devices with 16 bits PC, 128K bytes program memory
maximum.
.PP
(ii) PC(15:0) ← Z(15:0)Devices with 22 bits PC, 8M bytes program memory
maximum.
.PP
PC(21:16) ← 0
.PP
Syntax: Operands: Program Counter: Stack:
.PP
(i), (ii) IJMP None See Operation Not Affected
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
0100
T}@T{
.PP
0000
T}@T{
.PP
1001
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
mov\ r30,r0\ ;\ Set\ offset\ to\ jump\ table
ijmp\ ;\ Jump\ to\ routine\ pointed\ to\ by\ r31:r30
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 2
