.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "IN \- Load an I/O Location to Register \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS IN \- Load an I/O Location to Register
.SS  () Description:
.PP
Loads data from the I/O Space (Ports, Timers, Configuration registers
etc.) into register Rd in the register file.
.PP
Operation:
.PP
(i)Rd ← I/O(A)
.PP
Syntax: Operands: Program Counter:
.PP
IN Rd,A 0 ≤ d ≤ 31, 0 ≤ A ≤ 63 PC ← PC + 1
.PP
16\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1011
T}@T{
.PP
0AAd
T}@T{
.PP
dddd
T}@T{
.PP
AAAA
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
in\ r25,$16\ ;\ Read\ Port\ B
cpi\ r25,4\ ;\ Compare\ read\ value\ to\ constant
breqexit\ ;\ Branch\ if\ r25=4
\&...
exit:\ nop\ ;\ Branch\ destination\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
