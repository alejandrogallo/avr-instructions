.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "TST\- Test for Zero or Minus \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS TST \- Test for Zero or Minus
.SS  () Description:
.PP
Tests if a register is zero or negative.
Performs a logical AND between a register and itself.
The register will remain unchanged.
.PP
Operation:
.PP
(i)Rd ← Rd • Rd
.PP
Syntax: Operands: Program Counter:
.PP
(i)TST Rd 0 ≤ d ≤ 31 PC ← PC + 1
.PP
16\-bit Opcode: (see AND Rd, Rd)
.PP
.TS
tab(@);
l l l l.
T{
.PP
0010
T}@T{
.PP
00dd
T}@T{
.PP
dddd
T}@T{
.PP
dddd
T}
.TE
.SS  () Status Register and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
⇔
T}@T{
.PP
0
T}@T{
.PP
⇔
T}@T{
.PP
⇔
T}@T{
.PP
\-
T}
.TE
.PP
S: N ⊕ V, For signed tests.
.PP
V:0
.PP
Cleared
.PP
N:R7
.PP
Set if MSB of the result is set; cleared otherwise.
.PP
Z:
$\\overline{R7} \\overline{R6} \\overline{R5} \\overline{R4}$
.PP
$\\overline{R3} \\overline{R2} \\overline{R1} \\overline{R0}$
.PP
.PP
Set if the result is $00; cleared otherwise.
.PP
R (Result) equals Rd.
.PP
Example:
.IP
.nf
\f[C]
tst\ r0\ ;\ Test\ r0
breq\ zero\ ;\ Branch\ if\ r0=0
\&...
zero:\ nop\ ;\ Branch\ destination\ (do\ nothing)
\f[]
.fi
.PP
.PP
Words: 1 (2 bytes)
.PP
Cycles: 1
