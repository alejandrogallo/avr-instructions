.\"t
.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "STS \- Store Direct to data space \- \- AVR Assembler" "" "" "" ""
.hy
.SH AVR Assembler Instructions
.SS STS \- Store Direct to data space
.SS  () Description:
.PP
Stores one byte from a Register to the data space.
For parts with SRAM, the data space consists of the register file, I/O
memory and internal SRAM (and external SRAM if applicable).
For parts without SRAM, the data space consists of the register file
only.
The EEPROM has a separate address space.
.PP
A 16\-bit address must be supplied.
Memory access is limited to the current data segment of 64K bytes.
The STS instruction uses the
RAMPD (avrassembler.wb_registers.html#avrassembler.RAMPD) register to
access memory above 64K bytes.
To access another data segment in devices with more than 64K bytes data
space, the RAMPD in register in the I/O area has to be changed.
.PP
This instruction is not available in all devices.
Refer to the device specific instruction set summary.
In particular, notice that ATtiny10\-based devices use the
STS (avrassembler.wb_STS_-_Store_Direct_to_SRAM.html) instead of this
instruction.
.PP
Operation:
.PP
(i)(k) ← Rr
.PP
Syntax: Operands: Program Counter:
.PP
(i)STS k,Rr 0 ≤ r ≤ 31, 0 ≤ k ≤ 65535 PC ← PC + 2
.PP
32\-bit Opcode:
.PP
.TS
tab(@);
l l l l.
T{
.PP
1001
T}@T{
.PP
001d
T}@T{
.PP
dddd
T}@T{
.PP
0000
T}
_
T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}@T{
.PP
kkkk
T}
.TE
.SS  () Status Register (SREG) and Boolean Formula:
.PP
.TS
tab(@);
l l l l l l l l.
T{
.PP
I
T}@T{
.PP
T
T}@T{
.PP
H
T}@T{
.PP
S
T}@T{
.PP
V
T}@T{
.PP
N
T}@T{
.PP
Z
T}@T{
.PP
C
T}
_
T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}@T{
.PP
\-
T}
.TE
.PP
Example:
.IP
.nf
\f[C]
lds\ r2,$FF00\ ;\ Load\ r2\ with\ the\ contents\ of\ data\ space\ location\ $FF00
add\ r2,r1\ ;\ add\ r1\ to\ r2
sts\ $FF00,r2\ ;\ Write\ back
\f[]
.fi
.PP
.PP
Words: 2 (4 bytes)
.PP
Cycles: 2
