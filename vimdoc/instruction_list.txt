*instruction_list.txt*  AVR Assembler Instructions

===============================================================================
Contents ~

 1. Introduction                                |instruction_list-introduction|
 2. References                                    |instruction_list-references|

===============================================================================
                                                *instruction_list-introduction*
Introduction ~

**Table of Contents**

ADC - Add with Carry [1] ADD - Add without Carry [2] ADIW - Add Immediate to
Word [3] AND - Logical AND [4] ANDI - Logical AND with Immediateand [5] ASR -
Arithmetic Shift Right [6] BCLR - Bit Clear in SREG [7] BLD - Bit Load from the
T Flag in SREG to a Bit in Register. [8] BRBC - Branch if Bit in SREG is
Cleared [9] BRBS - Branch if Bit in SREG is Set [10] BRCC - Branch if Carry
Cleared [11] BRCS - Branch if Carry Set [12] BREAK - Break [13] BREQ - Branch
if Equal [14] BRGE - Branch if Greater or Equal Signed) [15] BRHC - Branch if
Half Carry Flag is Cleared [16] BRHS - Branch if Half Carry Flag is Set [17]
BRID - Branch if Global Interrupt is Disabled [18] BRIE - Branch if Global
Interrupt is Enabled [19] BRLO - Branch if Lower (Unsigned) [20] BRLT - Branch
if Less Than (Signed) [21] BRMI - Branch if Minus [22] BRNE - Branch if Not
Equal [23] BRPL - Branch if Plus [24] BRSH - Branch if Same or Higher
(Unsigned) [25] BRTC - if the T Flag is Cleared [26] BRTS - Branch if the T
Flag is Set [27] BRVC - Branch if Overflow Cleared [28] BRVS - Branch if
Overflow Set [29] BSET - Bit Set in SREG [30] BST - Bit Store from Bit in
Register to T Flag in SREG [31] CALL - Long Call to a Subroutine [32] CBI -
Clear Bit in I/O Register [33] CBR - Clear Bits in Register [34] CLC - Clear
Carry Flag [35] CLH - Clear Half Carry Flag [36] CLI - Clear Global Interrupt
Flag [37] CLN - Clear Negative Flag [38] CLR - Clear Register [39] CLS - Clear
Signed Flag [40] CLT - Clear T Flag [41] CLV - Clear Overflow Flag [42] CLZ -
Clear Zero Flag [43] COM- One’s Complement [44] CP- Compare [45] CPC- Compare
with Carry [46] CPI- Compare with Immediate [47] CPSE- Compare Skip if Equal
[48] DEC- Decrement [49] EICALL - Extended Indirect Call to Subroutine [50]
EIJMP - Extended Indirect Jump [51] ELPM - Extended Load Program Memory [52]
EOR - Exclusive OR [53] FMUL- Fractional Multiply Unsigned [54] FMULS -
Fractional Multiply Signed [55] FMULSU - Fractional Multiply Signed with
Unsigned [56] ICALL - Indirect Call to Subroutine [57] IJMP - Indirect Jump
[58] IN - Load an I/O Location to Register [59] INC- Increment [60] JMP - Jump
[61] LD - Load Indirect from data space to Register using Index X [62] LAT -
Load and Toggle [63] LAS - Load and Set [64] LAC - Load and Clear [65] LD
(LDD)- Load Indirect from data space to Register using Index Y [66] LD (LDD) -
Load Indirect From data space to Register using Index Z [67] LDI - Load
Immediate [68] LDS - Load Direct from data space [69] LDS - Load Direct from
SRAM [70] LPM - Load Program Memory [71] LSL- Logical Shift Left [72] LSR-
Logical Shift Right [73] MOV - Copy Register [74] MOVW - Copy Register Word
[75] MUL- Multiply Unsigned [76] MULS - Multiply Signed [77] MULSU - Multiply
Signed with Unsigned [78] NEG- Two’s Complement [79] NOP - No Operation [80]
OR- Logical OR [81] ORI- Logical OR with Immediate [82] OUT - Store Register to
I/O Location [83] POP - Pop Register from Stack [84] PUSH - Push Register on
Stack [85] RCALL - Relative Call to Subroutine [86] RET - Return from
Subroutine [87] RETI - Return from Interrupt [88] RJMP- Relative Jump [89] ROL-
Rotate Left trough Carry [90] ROR- Rotate Right through Carry [91] SBC-
Subtract with Carry [92] SBCI- Subtract Immediate with Carry [93] SBI - Set Bit
in I/O Register [94] SBIC - Skip if Bit in I/O Register is Cleared [95] SBIS -
Skip if Bit in I/O Register is Set [96] SBIW - Subtract Immediate from Word
[97] SBR- Set Bits in Register [98] SBRC - Skip if Bit in Register is Cleared
[99] SBRS - Skip if Bit in Register is Set [100] SEC - Set Carry Flag [101] SEH
- Set Half Carry Flag [102] SEI - Set Global Interrupt Flag [103] SEN - Set
Negative Flag [104] SER - Set all bits in Register [105] SES - Set Signed Flag
[106] SET - Set T Flag [107] SEV - Overflow Flag [108] SEZ - Set Zero Flag
[109] SLEEP- Sleep mode [110] SPM - Store Program Memory [111] ST - Store
Indirect From Register to data space using Index X [112] ST (STD) - Store
Indirect From Register to data space using Index Y [113] ST (STD) - Store
Indirect From Register to data space using Index Z [114] STS - Store Direct to
data space [115] STS - Store Direct to SRAM [116] SUB- Subtract without Carry
[117] SUBI- Subtract Immediate [118] SWAP - Swap Nibbles [119] TST- Test for
Zero or Minus [120] WDR - Watchdog Reset [121] XCH - Exchange [122]

===============================================================================
                                                  *instruction_list-references*
References ~

[1] avrassembler.wb_ADC.html
[2] avrassembler.wb_ADD.html
[3] avrassembler.wb_ADIW.html
[4] avrassembler.wb_AND.html
[5] avrassembler.wb_ANDI.html
[6] avrassembler.wb_ASR.html
[7] avrassembler.wb_BCLR.html
[8] avrassembler.wb_BLD.html
[9] avrassembler.wb_BRBC.html
[10] avrassembler.wb_BRBS.html
[11] avrassembler.wb_BRCC.html
[12] avrassembler.wb_BRCS.html
[13] avrassembler.wb_BREAK.html
[14] avrassembler.wb_BREQ.html
[15] avrassembler.wb_BRGE.html
[16] avrassembler.wb_BRHC.html
[17] avrassembler.wb_BRHS.html
[18] avrassembler.wb_BRID.html
[19] avrassembler.wb_BRIE.html
[20] avrassembler.wb_BRLO.html
[21] avrassembler.wb_BRLT.html
[22] avrassembler.wb_BRMI.html
[23] avrassembler.wb_BRNE.html
[24] avrassembler.wb_BRPL.html
[25] avrassembler.wb_BRSH.html
[26] avrassembler.wb_BRTC.html
[27] avrassembler.wb_BRTS.html
[28] avrassembler.wb_BRVC.html
[29] avrassembler.wb_BRVS.html
[30] avrassembler.wb_BSET.html
[31] avrassembler.wb_BST.html
[32] avrassembler.wb_CALL.html
[33] avrassembler.wb_CBI.html
[34] avrassembler.wb_CBR.html
[35] avrassembler.wb_CLC.html
[36] avrassembler.wb_CLH.html
[37] avrassembler.wb_CLI.html
[38] avrassembler.wb_CLN.html
[39] avrassembler.wb_CLR.html
[40] avrassembler.wb_CLS.html
[41] avrassembler.wb_CLT.html
[42] avrassembler.wb_CLV.html
[43] avrassembler.wb_CLZ.html
[44] avrassembler.wb_COM.html
[45] avrassembler.wb_CP.html
[46] avrassembler.wb_CPC.html
[47] avrassembler.wb_CPI.html
[48] avrassembler.wb_CPSE.html
[49] avrassembler.wb_DEC.html
[50] avrassembler.wb_EICALL.html
[51] avrassembler.wb_EIJMP.html
[52] avrassembler.wb_ELPM.html
[53] avrassembler.wb_EOR.html
[54] avrassembler.wb_FMUL.html
[55] avrassembler.wb_FMULS.html
[56] avrassembler.wb_FMULSU.html
[57] avrassembler.wb_ICALL.html
[58] avrassembler.wb_IJMP.html
[59] avrassembler.wb_IN.html
[60] avrassembler.wb_INC.html
[61] avrassembler.wb_JMP.html
[62] avrassembler.wb_LD.html
[63] avrassembler.wb_LAT.html
[64] avrassembler.wb_LAS.html
[65] avrassembler.wb_LAC.html
[66] avrassembler.wb_LDD.html
[67] avrassembler.wb_LDD_Z.html
[68] avrassembler.wb_LDI.html
[69] avrassembler.wb_LDS.html
[70] avrassembler.wb_LDS_-_Load_direct_from_SRAM.html
[71] avrassembler.wb_LPM.html
[72] avrassembler.wb_LSL.html
[73] avrassembler.wb_LSR.html
[74] avrassembler.wb_MOV.html
[75] avrassembler.wb_MOVW.html
[76] avrassembler.wb_MUL.html
[77] avrassembler.wb_MULS.html
[78] avrassembler.wb_MULSU.html
[79] avrassembler.wb_NEG.html
[80] avrassembler.wb_NOP.html
[81] avrassembler.wb_OR.html
[82] avrassembler.wb_ORI.html
[83] avrassembler.wb_OUT.html
[84] avrassembler.wb_POP.html
[85] avrassembler.wb_PUSH.html
[86] avrassembler.wb_RCALL.html
[87] avrassembler.wb_RET.html
[88] avrassembler.wb_RETI.html
[89] avrassembler.wb_RJMP.html
[90] avrassembler.wb_ROL.html
[91] avrassembler.wb_ROR.html
[92] avrassembler.wb_SBC.html
[93] avrassembler.wb_SBCI.html
[94] avrassembler.wb_SBI.html
[95] avrassembler.wb_SBIC.html
[96] avrassembler.wb_SBIS.html
[97] avrassembler.wb_SBIW.html
[98] avrassembler.wb_SBR.html
[99] avrassembler.wb_SBRC.html
[100] avrassembler.wb_SBRS.html
[101] avrassembler.wb_SEC.html
[102] avrassembler.wb_SEH.html
[103] avrassembler.wb_SEI.html
[104] avrassembler.wb_SEN.html
[105] avrassembler.wb_SER.html
[106] avrassembler.wb_SES.html
[107] avrassembler.wb_SET.html
[108] avrassembler.wb_SEV.html
[109] avrassembler.wb_SEZ.html
[110] avrassembler.wb_SLEEP.html
[111] avrassembler.wb_SPM.html
[112] avrassembler.wb_ST.html
[113] avrassembler.wb_STD.html
[114] avrassembler.wb_STD_Z.html
[115] avrassembler.wb_STS.html
[116] avrassembler.wb_STS_-_Store_Direct_to_SRAM.html
[117] avrassembler.wb_SUB.html
[118] avrassembler.wb_SUBI.html
[119] avrassembler.wb_SWAP.html
[120] avrassembler.wb_TST.html
[121] avrassembler.wb_WDR.html
[122] avrassembler.wb_XCH.html

vim: ft=help
